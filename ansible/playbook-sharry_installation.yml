---

- name: 'Install Sharry'
  hosts: 'k3s1'
  gather_facts: true
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    - name: 'Create the sharry namespace'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        name: 'sharry'
        api_version: 'v1'
        kind: 'Namespace'
        state: 'present'

    - name: 'Install sharry via the helm chart'
      delegate_to: 'localhost'
      kubernetes.core.helm:
        chart_repo_url: 'https://johanneskastl.github.io/helm-charts'
        chart_ref: 'sharry'
        release_name: 'sharry'
        release_namespace: 'sharry'
        release_values:
          ingress:
            main:
              enabled: true
              className: "traefik"
              hosts:
                - host: "sharry.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
                  paths:
                    - path: /
                      pathType: Prefix
          config: |
            sharry.restserver {
              bind {
                address = "0.0.0.0"
                port = 9090
              }
              backend {
                auth {
                  fixed {
                    enabled = true
                    user = "admin"
                    password = "admin"
                    order = 10
                  }
                }
                jdbc {
                  url = "jdbc:postgresql://db-postgresql.postgresql.svc.cluster.local:5432/sharry"
                  user = "sharry"
                  password = "totallynotsecure"
                }
              }
            }

    - name: 'Wait until all pods are running'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: sharry
      register: pod_list
      until: |
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running"]
        or
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running", "Succeeded"]
      retries: 12
      delay: 10

    - name: 'Wait until the sharry URL is reachable'
      ansible.builtin.uri:
        url: "http://sharry.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
      register: result
      until: "result.status == 200"
      retries: 11
      delay: 10

    - name: 'sharry URL'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "Connect to the following URL in your browser: http://sharry.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"

    - name: 'sharry Admin credentials'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "Admin credentials are username 'admin' and password 'admin'"
